#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Apr 17 08:09:16 2020

@author: tiago
"""

import matplotlib.pyplot as plt
import numpy as np

def boxPlot_acc(labels, data1, data2, data3, name,  vec):
    
    data = [data1, data2, data3]
    
    plt.figure(figsize=(9, 6))
    plt.rc('xtick', labelsize=14) 
    plt.ylabel("localization error (m)", fontsize = 14)
    plt.xticks([],labels)
    plt.yticks(vec)
    plt.grid(True)
    #plt.xticks(np.arange(len(labels))+1, [])
    #plt.xticks(algos)
    #ax.xticks(["1", "2", "3"], ["Mult. with NLS", "Mult. with LLS, Weighted Mult."])
    plt.boxplot(data, showmeans=True, showfliers=True)
    plt.savefig(name)
    

def boxPlot_time(labels, data1, data2, data3, name, vec):
    
    data1 = [1000*elem for elem in data1]
    data2 = [1000*elem for elem in data2]
    data3 = [1000*elem for elem in data3]
    print(data1)
    data = [data1, data2, data3]
    
    plt.rc('xtick', labelsize=14) 
    plt.figure(figsize=(9, 6))
    plt.ylabel("Response time (ms)", fontsize = 14)
    plt.xticks([],labels)
    plt.yticks(vec)
    plt.grid(True)
    #plt.xticks(np.arange(len(labels))+1, [])
    #plt.xticks(algos)
    #ax.xticks(["1", "2", "3"], ["Mult. with NLS", "Mult. with LLS, Weighted Mult."])
    plt.boxplot(data, showmeans=True, showfliers=True)
    plt.savefig(name)

def lognormal():
    
    labels = ["Mult. with NLS", "Mult. with LLS", "Weighted Mult."]
    # circular algo.
    data1 = [4.69013274,0.94101552,2.99434241,4.70080099,6.42092654,5.3303506,5.98242071,1.16162591,3.63208749,1.68893629,0.77593208,3.12458326,1.60634256,1.59341805,4.24517221,3.793392,2.92280973,3.12668897]
    # hyperbolic
    data2 = [5.12928046,1.16623597,3.36634555,5.82710829,6.77220944,6.42790205,6.58506332,1.49724119,2.23462752,0.67980278,1.31104425,1.56251032,0.97198658,0.63774399,2.47792489,3.6151227,2.89693267,2.67101891]
    # weigted multi.
    data3 = [4.79929695,1.09267319,2.97071479,5.65100772,5.87916436,5.569888,6.25379014,2.03224376,3.0480434,1.9948004,0.94965826,3.08353913,1.80832186,1.29818804,4.72611796,2.90092798,3.17526469,2.76440093]
    boxPlot_acc(labels,data1, data2, data3, "boxPlot_mult_log", np.arange(0, 8, 0.5))
    
    time1 = [0.00305653,0.01105714,0.00399351,0.00357223,0.00388122,0.00378704,0.00448108,0.0094769,0.00932479,0.01266694,0.00494552,0.01622605,0.01599145,0.00332332,0.0103848,0.00900173,0.00301504,0.00810289]
    time2 = [0.00020742,0.00017357,0.00017452,0.00017834,0.00017667,0.0001905,0.00018001,0.00016594,0.00017476,0.00016689,0.00017834,0.00017953,0.00017357,0.00016832,0.00017786,0.00017571,0.00017786,0.00017357]
    time3 = [0.00512266,0.01086164,0.01288915,0.00265312,0.00343251,0.00585055,0.00233674,0.0036335,0.00322151,0.00905848,0.00541663,0.00926137,0.01506829,0.00822663,0.00221682,0.00460982,0.01050806,0.00274086]
    
    boxPlot_time(labels, time1, time2, time3, "boxPlot_mult_log_time" , np.arange(0, 17, 1))

def polynomial():
    
    labels = ["Mult. with NLS", "Mult. with LLS", "Weighted Mult."]
    data2 = [5.3469478,1.2076835,3.2543549,5.49155069,6.58455764,6.1227509,6.38648434,1.72067371,2.19154019,0.23554218,1.11359291,1.4963839,1.01039786,0.26527713,3.00750348,3.54583935,1.82051234,1.57964032]
    data1 = [3.45704806,0.54697668,3.44189218,3.12709579,5.7583891,4.61373848,4.09217047,1.44386766,3.29444614,0.26902035,1.2446576,2.63650396,1.13703992,1.12628727,5.47752303,2.97256593,1.62108528,1.58710744]
    data3 = [6.18783147,10.94338423,3.72362278,3.21650848,5.09190426,5.63592536,6.61481283,1.71423233,2.42209443,2.7896039,1.59932465,4.44864114,1.25643014,0.38741479,5.62157596,2.39220527,2.09871313,1.89634214]
    boxPlot_acc(labels,data1, data2, data3, "boxPlot_mult_poly", np.arange(0, 12, 0.5))
    
    time2 = [0.02258015,0.00092745,0.00097704,0.00097823,0.00096178,0.00088501,0.00097752,0.00101161,0.00102425,0.00099921,0.00099277,0.00097823,0.00098896,0.00103903,0.00093699,0.00088358,0.00089741,0.00089574]
    time1 = [0.004076,0.00279355,0.00781846,0.00503159,0.00309539,0.0036056,0.00329852,0.00262117,0.00725412,0.00810266,0.00314522,0.00324059,0.00334311,0.00378132,0.00476789,0.00457406,0.01003623,0.0035615]
    time3 = [0.00659299,0.00930381,0.00416541,0.00327849,0.00964141,0.00277805,0.0025866,0.01042485,0.00330973,0.00330663,0.00298572,0.00929666,0.00509071,0.00776291,0.00321913,0.00770116,0.00752163,0.0031004]
    
    boxPlot_time(labels, time1, time2, time3, "boxPlot_mult_poly_time" , np.arange(0, 24, 1))
    
def fingerprinting():
    
    labels = ["Finger. with KNN", "Finger. with weighted KKN", "Finger. with NN"]
    data1 = [1.70293863659264,0.641404708432983,1.27769323391806,5.4665711373767,2.65363901086791,1.6786303941011,2.12162673437153,0.707742891168819,4.2573465914816,0.880227243386615,1.82915280936285,2.81440935188895,1.12378823627942,1.77341478509682,4.35142505393348,2.2959311836377,3.0356712601993,0.893196506934504]
    data2 = [2.22611769679862,0.563205113613149,1.93961336353408,6.03530446622207,3.1104019032916,2.08086520466848,1.06962610289764,1.75559106855782,4.05690768936144,0.653681879816168,2.85119273287514,2.49377224300857,0.939148550549911,1.84024454896625,4.75143136328412,2.97060599878207,3.29387310016643,1.31209755734854]
    data3 = [4.50422654693714,3.23054249462045,2.87245294105496,2.92368848531063,5.82760782309516,3.43342976012678,4.81924947986295,0.576463161572026,4.23514014549845,0.895075183429919,1.64313692350257,1.76065645299256,2.54272278402335,0.686498208017827,4.84754539236819,2.94194603460984,0.53752314801518,1.13945253614775]
    boxPlot_acc(labels, data1, data2, data3, "boxPlot_finger", np.arange(0, 12, 0.5))
    
    time1 = [0.000470161437988,0.000469207763672,0.000469446182251,0.000474214553833,0.000528573989868,0.000478029251099,0.000475883483887,0.000471115112305,0.00047779083252,0.000468254089355,0.000476598739624,0.000473737716675,0.000452280044556,0.000471830368042,0.000475168228149,0.000471353530884,0.000472545623779,0.000471115112305]
    time2 = [0.00058913230896,0.000620126724243,0.000660181045532,0.000661373138428,0.000745534896851,0.000674724578857,0.000670909881592,0.000665664672852,0.000628232955933,0.000661849975586,0.000667333602905,0.000635862350464,0.000671625137329,0.000684261322021,0.00062370300293,0.000676155090332,0.000630617141724,0.000632047653198]
    time3 = [0.00973961353302,0.009112119674683,0.008601665496826,0.003299236297607,0.009617567062378,0.002700805664063,0.002586364746094,0.00525689125061,0.003094434738159,0.002801179885864,0.003719806671143,0.0030517578125,0.002740144729614,0.002907514572144,0.003307580947876,0.00282096862793,0.002960443496704,0.002646207809448]
    boxPlot_time(labels, time1, time2, time3, "boxPlot_finger_time" , np.arange(0, 11, 0.5))

def main():
    
    polynomial()
    
if __name__== "__main__":
    main()